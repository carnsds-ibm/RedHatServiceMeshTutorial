{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _iconsReact = require(\"@carbon/icons-react\");\n\nvar _carbonComponents = require(\"carbon-components\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar prefix = _carbonComponents.settings.prefix;\n\nvar SideNavSwitcher = _react.default.forwardRef(function SideNavSwitcher(props, ref) {\n  var customClassName = props.className,\n      labelText = props.labelText,\n      onChange = props.onChange,\n      options = props.options;\n  var className = (0, _classnames.default)(\"\".concat(prefix, \"--side-nav__switcher\"), customClassName); // Note for usage around `onBlur`: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-onchange.md\n\n  return _react.default.createElement(\"div\", {\n    className: className\n  }, _react.default.createElement(\"label\", {\n    htmlFor: \"side-nav-switcher\",\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, labelText), _react.default.createElement(\"select\", {\n    id: \"carbon-side-nav-switcher\",\n    className: \"\".concat(prefix, \"--side-nav__select\"),\n    defaultValue: \"\",\n    onBlur: onChange,\n    onChange: onChange,\n    ref: ref\n  }, _react.default.createElement(\"option\", {\n    className: \"\".concat(prefix, \"--side-nav__option\"),\n    disabled: true,\n    hidden: true,\n    value: \"\"\n  }, labelText), options.map(function (option) {\n    return _react.default.createElement(\"option\", {\n      key: option,\n      className: \"\".concat(prefix, \"--side-nav__option\"),\n      value: option\n    }, option);\n  })), _react.default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--side-nav__switcher-chevron\")\n  }, _react.default.createElement(_iconsReact.ChevronDown20, null)));\n});\n\nSideNavSwitcher.propTypes = {\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * Provide the label for the switcher. This will be the firt visible option\n   * when someone views this control\n   */\n  labelText: _propTypes.default.string.isRequired,\n\n  /**\n   * Provide a callback function that is called whenever the switcher value is\n   * updated\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * Provide an array of options to be rendered in the switcher as an\n   * `<option>`. The text value will be what is displayed to the user and is set\n   * as the `value` prop for each `<option>`.\n   */\n  options: _propTypes.default.arrayOf(_propTypes.default.string).isRequired\n};\nvar _default = SideNavSwitcher;\nexports.default = _default;","map":{"version":3,"sources":["/Users/dilloncarns/Projects/redhatservicemeshtutorial/node_modules/carbon-components-react/lib/components/UIShell/SideNavSwitcher.js"],"names":["Object","defineProperty","exports","value","default","_iconsReact","require","_carbonComponents","_classnames","_interopRequireDefault","_propTypes","_react","obj","__esModule","prefix","settings","SideNavSwitcher","forwardRef","props","ref","customClassName","className","labelText","onChange","options","concat","createElement","htmlFor","id","defaultValue","onBlur","disabled","hidden","map","option","key","ChevronDown20","propTypes","string","isRequired","func","arrayOf","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _iconsReact = require(\"@carbon/icons-react\");\n\nvar _carbonComponents = require(\"carbon-components\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar prefix = _carbonComponents.settings.prefix;\n\nvar SideNavSwitcher = _react.default.forwardRef(function SideNavSwitcher(props, ref) {\n  var customClassName = props.className,\n      labelText = props.labelText,\n      onChange = props.onChange,\n      options = props.options;\n  var className = (0, _classnames.default)(\"\".concat(prefix, \"--side-nav__switcher\"), customClassName); // Note for usage around `onBlur`: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-onchange.md\n\n  return _react.default.createElement(\"div\", {\n    className: className\n  }, _react.default.createElement(\"label\", {\n    htmlFor: \"side-nav-switcher\",\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, labelText), _react.default.createElement(\"select\", {\n    id: \"carbon-side-nav-switcher\",\n    className: \"\".concat(prefix, \"--side-nav__select\"),\n    defaultValue: \"\",\n    onBlur: onChange,\n    onChange: onChange,\n    ref: ref\n  }, _react.default.createElement(\"option\", {\n    className: \"\".concat(prefix, \"--side-nav__option\"),\n    disabled: true,\n    hidden: true,\n    value: \"\"\n  }, labelText), options.map(function (option) {\n    return _react.default.createElement(\"option\", {\n      key: option,\n      className: \"\".concat(prefix, \"--side-nav__option\"),\n      value: option\n    }, option);\n  })), _react.default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--side-nav__switcher-chevron\")\n  }, _react.default.createElement(_iconsReact.ChevronDown20, null)));\n});\n\nSideNavSwitcher.propTypes = {\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * Provide the label for the switcher. This will be the firt visible option\n   * when someone views this control\n   */\n  labelText: _propTypes.default.string.isRequired,\n\n  /**\n   * Provide a callback function that is called whenever the switcher value is\n   * updated\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * Provide an array of options to be rendered in the switcher as an\n   * `<option>`. The text value will be what is displayed to the user and is set\n   * as the `value` prop for each `<option>`.\n   */\n  options: _propTypes.default.arrayOf(_propTypes.default.string).isRequired\n};\nvar _default = SideNavSwitcher;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}