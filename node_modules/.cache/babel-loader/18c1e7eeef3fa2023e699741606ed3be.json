{"ast":null,"code":"var _jsxFileName = \"/Users/dilloncarns/Projects/redhatservicemeshtutorial/src/components/pages/HomePage.js\";\nimport React from \"react\";\nimport { Content } from \"carbon-components-react/lib/components/UIShell\";\nimport { ListItem, UnorderedList } from \"carbon-components-react\";\nimport Header from \"../header/BasicHeader\";\nimport LabelHeader from '../header/LabelHeader';\nimport CodeSnip from '../util/CustomCodeSnip';\nimport BodyText from '../text/BodyText';\n\nconst HomePage = () => /*#__PURE__*/React.createElement(Content, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Header, {\n  text: \"Welcome\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(BodyText, {\n  text: `In this tutorial, We will discuss and run through a demo of using Red Hat Service Mesh.`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(BodyText, {\n  text: \"Please follow along the steps carefully and check that you meet the following requirements:\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(LabelHeader, {\n  text: \"Requirements\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(UnorderedList, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 11\n  }\n}, \" \", /*#__PURE__*/React.createElement(BodyText, {\n  SM: true,\n  B: true,\n  text: \"oc CLI tool.\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 22\n  }\n})), /*#__PURE__*/React.createElement(UnorderedList, {\n  nested: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(BodyText, {\n  SM: true,\n  B: true,\n  text: \"Run the following to check: (If there was output about openshift commands, you're good to go.)\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 21\n  }\n}), /*#__PURE__*/React.createElement(CodeSnip, {\n  text: \"oc\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 140\n  }\n})), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"a\", {\n  rel: \"noopener noreferrer\",\n  href: 'https://docs.openshift.com/container-platform/3.6/cli_reference/get_started_cli.html',\n  target: \"_blank\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 23\n  }\n}, \"Link for CLI download if needed.\"))), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(BodyText, {\n  SM: true,\n  B: true,\n  text: \"Openshift cluster (4.X preferred)\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }\n})), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(BodyText, {\n  SM: true,\n  B: true,\n  text: \"Red Hat Service Mesh installed\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 21\n  }\n})), /*#__PURE__*/React.createElement(UnorderedList, {\n  nested: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"a\", {\n  rel: \"noopener noreferrer\",\n  href: 'https://docs.openshift.com/container-platform/4.3/service_mesh/service_mesh_install/preparing-ossm-installation.html',\n  target: \"_blank\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }\n}, \"Link for installation guide if needed.\"))), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(BodyText, {\n  SM: true,\n  B: true,\n  text: \"*Also Make sure you're in a directory you don't mind having a lot of yaml files in.\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 21\n  }\n})), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(BodyText, {\n  SM: true,\n  B: true,\n  text: \"Please remember to replace text in angled brackets! For instance, \\\"<Enter name>\\\" would become \\\"Johnny\\\".\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 21\n  }\n}))), /*#__PURE__*/React.createElement(LabelHeader, {\n  text: \"What we will be deploying\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(BodyText, {\n  SM: true,\n  text: 'A simple distributed application that allows users to create and delete articles and view articles from other users. ' + 'This application will have a mongodb instance, redis and an Eclipse Microprofile running on Open Liberty backend. The frontend was ' + ' created with ReactJS and is served on a nginx container. AKA, THE VOID.',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(LabelHeader, {\n  text: \"Steps:\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(UnorderedList, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(BodyText, {\n  B: true,\n  SM: true,\n  text: \"Setup - Create a new project and add it to the Service Mesh Control Plane\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 21\n  }\n})), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(BodyText, {\n  B: true,\n  SM: true,\n  text: \"Configuration - Create the necessary files in order to analyze and make the application later.\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 21\n  }\n})), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(BodyText, {\n  B: true,\n  SM: true,\n  text: \"Install Application - Create Deployment Configs of the application to monitor with Service Mesh\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 21\n  }\n})), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(BodyText, {\n  B: true,\n  SM: true,\n  text: \"Using Kiali - A view into some of the features Kiali provides for the application\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 21\n  }\n})), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(BodyText, {\n  B: true,\n  SM: true,\n  text: \"Grafana - Using Grafana to view metrics\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 21\n  }\n})), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(BodyText, {\n  B: true,\n  SM: true,\n  text: \"Distributed Tracing - Using Jaeger to view Distributed Tracing\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 21\n  }\n})), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(BodyText, {\n  B: true,\n  SM: true,\n  text: \"Egress - How to add external resource access if needed\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 21\n  }\n}))));\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/dilloncarns/Projects/redhatservicemeshtutorial/src/components/pages/HomePage.js"],"names":["React","Content","ListItem","UnorderedList","Header","LabelHeader","CodeSnip","BodyText","HomePage"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { Content } from \"carbon-components-react/lib/components/UIShell\";\nimport { ListItem, UnorderedList } from \"carbon-components-react\";\nimport Header from \"../header/BasicHeader\";\nimport LabelHeader from '../header/LabelHeader';\nimport CodeSnip from '../util/CustomCodeSnip';\nimport BodyText from '../text/BodyText';\n\n\nconst HomePage = () => (\n  <Content>\n      <Header text=\"Welcome\"/>\n      <BodyText text={`In this tutorial, We will discuss and run through a demo of using Red Hat Service Mesh.`}/>\n      <BodyText text='Please follow along the steps carefully and check that you meet the following requirements:'/>\n      \n      <LabelHeader text='Requirements' />\n        <UnorderedList>\n          <ListItem> <BodyText SM B text='oc CLI tool.'/></ListItem>\n          <UnorderedList nested>\n          <ListItem><BodyText SM B text=\"Run the following to check: (If there was output about openshift commands, you're good to go.)\" /><CodeSnip text='oc' /></ListItem>\n            <ListItem><a rel=\"noopener noreferrer\" href={'https://docs.openshift.com/container-platform/3.6/cli_reference/get_started_cli.html'} target='_blank'>Link for CLI download if needed.</a></ListItem>\n          </UnorderedList>\n          <ListItem><BodyText SM B text='Openshift cluster (4.X preferred)' /></ListItem>\n          <ListItem><BodyText SM B text='Red Hat Service Mesh installed'/></ListItem>\n          <UnorderedList nested>\n            <ListItem><a rel=\"noopener noreferrer\" href={'https://docs.openshift.com/container-platform/4.3/service_mesh/service_mesh_install/preparing-ossm-installation.html'} target='_blank'>Link for installation guide if needed.</a></ListItem>\n          </UnorderedList>\n          <ListItem><BodyText SM B text=\"*Also Make sure you're in a directory you don't mind having a lot of yaml files in.\"/></ListItem>\n          <ListItem><BodyText SM B text='Please remember to replace text in angled brackets! For instance, \"<Enter name>\" would become \"Johnny\".'/></ListItem>\n        </UnorderedList>\n      <LabelHeader text='What we will be deploying' />\n      <BodyText SM text={'A simple distributed application that allows users to create and delete articles and view articles from other users. '\n        + 'This application will have a mongodb instance, redis and an Eclipse Microprofile running on Open Liberty backend. The frontend was ' \n        + ' created with ReactJS and is served on a nginx container. AKA, THE VOID.'}/>\n      <LabelHeader text='Steps:' />\n        <UnorderedList>\n          <ListItem><BodyText B SM text='Setup - Create a new project and add it to the Service Mesh Control Plane' /></ListItem>\n          <ListItem><BodyText B SM text='Configuration - Create the necessary files in order to analyze and make the application later.'/></ListItem>\n          <ListItem><BodyText B SM text='Install Application - Create Deployment Configs of the application to monitor with Service Mesh'/></ListItem>\n          <ListItem><BodyText B SM text='Using Kiali - A view into some of the features Kiali provides for the application'/></ListItem>\n          <ListItem><BodyText B SM text='Grafana - Using Grafana to view metrics'/></ListItem>\n          <ListItem><BodyText B SM text='Distributed Tracing - Using Jaeger to view Distributed Tracing'/></ListItem>\n          <ListItem><BodyText B SM text='Egress - How to add external resource access if needed'/></ListItem>\n        </UnorderedList>\n  </Content>\n);\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}